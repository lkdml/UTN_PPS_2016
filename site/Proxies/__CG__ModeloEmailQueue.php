<?php

namespace Proxies\__CG__\Modelo;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EmailQueue extends \Modelo\EmailQueue implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'queueId', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'destinatario', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'remitente', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'asunto', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'contenido', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'estado', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'fechaEnvio'];
        }

        return ['__isInitialized__', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'queueId', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'destinatario', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'remitente', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'asunto', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'contenido', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'estado', '' . "\0" . 'Modelo\\EmailQueue' . "\0" . 'fechaEnvio'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EmailQueue $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getQueueId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getQueueId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQueueId', []);

        return parent::getQueueId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestinatario($destinatario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestinatario', [$destinatario]);

        return parent::setDestinatario($destinatario);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestinatario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestinatario', []);

        return parent::getDestinatario();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemitente($remitente)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemitente', [$remitente]);

        return parent::setRemitente($remitente);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemitente()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemitente', []);

        return parent::getRemitente();
    }

    /**
     * {@inheritDoc}
     */
    public function setAsunto($asunto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAsunto', [$asunto]);

        return parent::setAsunto($asunto);
    }

    /**
     * {@inheritDoc}
     */
    public function getAsunto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAsunto', []);

        return parent::getAsunto();
    }

    /**
     * {@inheritDoc}
     */
    public function setContenido($contenido)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContenido', [$contenido]);

        return parent::setContenido($contenido);
    }

    /**
     * {@inheritDoc}
     */
    public function getContenido()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContenido', []);

        return parent::getContenido();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstado($estado)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstado', [$estado]);

        return parent::setEstado($estado);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstado()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstado', []);

        return parent::getEstado();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaEnvio($fechaEnvio)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaEnvio', [$fechaEnvio]);

        return parent::setFechaEnvio($fechaEnvio);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaEnvio()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaEnvio', []);

        return parent::getFechaEnvio();
    }

}
